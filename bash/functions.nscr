# -*- Mode: sh -*-
#
# functions.nscr
#
# Personal aliases and functions

######################################################################
# General Aliases
######################################################################

alias mv='/bin/mv -i'

alias h='history'

# I used to hate less.  Weird.
alias more=less

alias names="awk '{print "'$NF'"}'"
alias lens="awk '{print length, \$0}'"

alias wd='basename `pwd`'
alias here='cd $cwd'

alias path='echo $PATH | tr ":" "\012"'

# ls aliases; some depend on default behavior of -l flag (whether it
# prints the group or not)

alias ls='/bin/ls -AF'
alias lt='/bin/ls -lt'
alias ltr='/bin/ls -ltr'
alias ll='/bin/ls -ln'
alias l='/bin/ls -lAt'
alias s='/bin/ls' # for when I accidentally type ;s instead of ls
alias lsdirs="/bin/ls -l | grep ^d | awk '{print "'$NF'"}'"
alias files="/bin/ls -l | grep='^-' | awk '{print "'$NF'"}'"

alias lz='/bin/ls -1 | awk "{print length, \$0}" | sort -n | awk "{print \$2}"'
alias ds='/bin/ls -l | grep ^d'
alias subdirs='/bin/ls -ld */* | grep ^d'

# git aliases; need more work...
alias gup='git fetch --prune && git rebase origin/master master'
alias gtb='git branch --sort=committerdate'
alias cont='git `conflict-status` --continue'
alias abort='git `conflict-status` --abort'
alias skip='git `conflict-status` --skip'
alias glo='git log --oneline --reverse'
alias glot='git log --oneline --reverse -n 20'

alias cleen='/bin/rm -f `find . -name "*.pyc"`'

######################################################################
# FileUtils Aliases
######################################################################
alias rd='jfu rd'
alias ss='jfu ss'
alias md='jfu md'
alias is='jfu is'
alias st='jfu st'
alias nlfs='jfu nlfs'
alias dsc='jfu dsc'
alias cfg='jfu cfg'
alias cn='jfu cn'
alias ascs='jfu ascs'

export JVFILES=~/Documents/Logs/all-files.log
alias fff='find ~ -type f > ${JVFILES}'
function jvgrep
{
  egrep $* ${JVFILES}
}

function jvgrepx
{
  suf=$1
  patt='\.'${suf}'$'
  egrep ${patt} ${JVFILES}
}

function ff
{
  dir=`echo $1 | sed 's,/*$,,g'`
  shift
  find $dir -type f $* | sort
}

function gst
{
  sandbox=`git rev-parse --show-toplevel 2>/dev/null`
  if [ -n "${sandbox}" ]
  then
    git status | head -2
    git status -s | sort -k 2
  else
    /bin/ls -AF
  fi
}

# Get git status for each directory in the working directory
function sgst
{
    here=${PWD}
    for pkg in *
    do
        cd ${here}/${pkg}
        if [ -d ./.git/. ]
        then
            echo ${pkg}
            git status -s
        else
            echo "++ ${pkg} not a git repository"
        fi
    done
    cd ${here}
    unset here
}

function glm
{
  rev=HEAD
  if [ -n "$1" ]
  then
    rev=$1
    shift
  fi
  git log --oneline --reverse origin/master..${rev} $*
}

function gtd
{
# For shells within emacs... or, really, whenever.  I can pipe through
# more if I want to... who the hell is git to do it for me?
    files=$*
    if [ -z "$files" ]
    then
        echo "diffing all modified files below here"
        files=`git status -s | grep -v '\.\.' | awk '{print $2}'`
    fi
    for file in $files
    do
        git diff -w $file | tr -d '\015' | cat
   done
}

function cntslash
{
  awk -F/ '{print NF " " $0}' | sort -n
}

function jsonize
{
    cat $1 | python -mjson.tool
}

function getsuf
{
  awk -F/ '{print $NF}' | awk -F. '{if (NF > 1) print $NF}'
}

function cntsuf
{
  getsuf | countlines
}
